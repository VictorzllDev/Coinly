/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AuthLayoutRouteImport } from './pages/_auth/_layout'
import { Route as AppLayoutRouteImport } from './pages/_app/_layout'
import { Route as AuthSignUpRouteImport } from './pages/_auth/sign-up'
import { Route as AuthSignInRouteImport } from './pages/_auth/sign-in'
import { Route as AppTransactionLayoutRouteImport } from './pages/_app/transaction/_layout'
import { Route as AppDashboardLayoutRouteImport } from './pages/_app/_dashboard/_layout'
import { Route as AppTransactionIndexRouteImport } from './pages/_app/transaction/index'
import { Route as AppDashboardIndexRouteImport } from './pages/_app/_dashboard/index'

const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AppTransactionLayoutRoute = AppTransactionLayoutRouteImport.update({
  id: '/transaction',
  path: '/transaction',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppDashboardLayoutRoute = AppDashboardLayoutRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppTransactionIndexRoute = AppTransactionIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppTransactionLayoutRoute,
} as any)
const AppDashboardIndexRoute = AppDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDashboardLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/transaction': typeof AppTransactionLayoutRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/': typeof AppDashboardIndexRoute
  '/transaction/': typeof AppTransactionIndexRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/': typeof AppDashboardIndexRoute
  '/transaction': typeof AppTransactionIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppLayoutRouteWithChildren
  '/_auth': typeof AuthLayoutRouteWithChildren
  '/_app/_dashboard': typeof AppDashboardLayoutRouteWithChildren
  '/_app/transaction': typeof AppTransactionLayoutRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_app/_dashboard/': typeof AppDashboardIndexRoute
  '/_app/transaction/': typeof AppTransactionIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/transaction' | '/sign-in' | '/sign-up' | '/' | '/transaction/'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/sign-up' | '/' | '/transaction'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_app/_dashboard'
    | '/_app/transaction'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/_app/_dashboard/'
    | '/_app/transaction/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_app/transaction': {
      id: '/_app/transaction'
      path: '/transaction'
      fullPath: '/transaction'
      preLoaderRoute: typeof AppTransactionLayoutRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_app/_dashboard': {
      id: '/_app/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppDashboardLayoutRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_app/transaction/': {
      id: '/_app/transaction/'
      path: '/'
      fullPath: '/transaction/'
      preLoaderRoute: typeof AppTransactionIndexRouteImport
      parentRoute: typeof AppTransactionLayoutRoute
    }
    '/_app/_dashboard/': {
      id: '/_app/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppDashboardIndexRouteImport
      parentRoute: typeof AppDashboardLayoutRoute
    }
  }
}

interface AppDashboardLayoutRouteChildren {
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
}

const AppDashboardLayoutRouteChildren: AppDashboardLayoutRouteChildren = {
  AppDashboardIndexRoute: AppDashboardIndexRoute,
}

const AppDashboardLayoutRouteWithChildren =
  AppDashboardLayoutRoute._addFileChildren(AppDashboardLayoutRouteChildren)

interface AppTransactionLayoutRouteChildren {
  AppTransactionIndexRoute: typeof AppTransactionIndexRoute
}

const AppTransactionLayoutRouteChildren: AppTransactionLayoutRouteChildren = {
  AppTransactionIndexRoute: AppTransactionIndexRoute,
}

const AppTransactionLayoutRouteWithChildren =
  AppTransactionLayoutRoute._addFileChildren(AppTransactionLayoutRouteChildren)

interface AppLayoutRouteChildren {
  AppDashboardLayoutRoute: typeof AppDashboardLayoutRouteWithChildren
  AppTransactionLayoutRoute: typeof AppTransactionLayoutRouteWithChildren
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppDashboardLayoutRoute: AppDashboardLayoutRouteWithChildren,
  AppTransactionLayoutRoute: AppTransactionLayoutRouteWithChildren,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
